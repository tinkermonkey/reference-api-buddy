name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'  # triggers only for semantic version tags like v1.2.3

permissions:
  contents: write  # needed for creating GitHub releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build wheels and sdist
      run: python -m build

    - name: Check package integrity
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'tinkermonkey/reference-api-buddy'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish package to PyPI
      # Requires PYPI_API_TOKEN secret to be configured in repository settings
      # See docs/RELEASE_SETUP.md for setup instructions
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        print-hash: true

  github-release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Extract changelog entry
      id: changelog
      run: |
        # Extract the changelog entry for this version
        VERSION=${{ steps.get_version.outputs.VERSION }}
        CHANGELOG_CONTENT=$(awk -v version="$VERSION" '
          /^## \['"$VERSION"'\]/ { found=1; next }
          found && /^## \[/ { exit }
          found { print }
        ' CHANGELOG.md | sed '/^$/d' | head -50)

        # Set multiline output
        echo "CONTENT<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Release v${{ steps.get_version.outputs.VERSION }}"
        body: |
          ## Changes in v${{ steps.get_version.outputs.VERSION }}

          ${{ steps.changelog.outputs.CONTENT }}

          ---

          **Full Changelog**: [CHANGELOG.md](https://github.com/tinkermonkey/reference-api-buddy/blob/main/CHANGELOG.md)

          **Installation**: `pip install reference-api-buddy==${{ steps.get_version.outputs.VERSION }}`
        draft: false
        prerelease: false
